@use '../utils/variables' as v ;
@use '../utils/functions' as f;
@use '../utils/mixins' as m;

/* ------------------------------------------------ */
/* OHMYFOOD HOMEPAGE  */

/* Location Section */
.location {
    color: v.$location-text-color ;
    background-color: v.$location-background-color;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 1rem;
    padding: 1rem 0;    
}

/* Working Section */
.working {
    display: flex;
    justify-content: center;

    background-color: v.$working-background-color;

    .wrapper {
        @include m.media-breakpoint-up(tablet) {
            padding-top: f.pxToRem(50);
            padding-bottom: f.pxToRem(50);
        }

    }
    
    &__steps {
        list-style: none;
        counter-reset: working-steps-counter;

        margin-left: f.pxToRem(12);

        @include m.media-breakpoint-up(desktop){
            display: flex;
            column-gap: 36px;
        }

        > li {
            counter-increment: working-steps-counter;
            display: block;
            position: relative;    
            
            @include m.media-breakpoint-up(desktop) {
                flex: 1 1 auto;
            }
        }

        > li:not(:last-child) {
            margin-bottom: f.pxToRem(25);

            @include m.media-breakpoint-up(desktop) {
                margin-bottom: 0;
            }
        }

        > li::before {
            content: counter(working-steps-counter) "";
            color: v.$font-tertiary-color;
            font-size: map-get(v.$font-sizes, fs-300);
            background-color: map-get(v.$colors, soft-violet);
            height: 24px;
            width: 24px;
            border-radius: 50%;

            display: flex;
            justify-content: center;
            align-items: center;
            position: absolute;
            top: calc(50% - 12px);
            left: -12px;
        }

        .card {
            display: flex; 
            padding: f.pxToRem(28) 0;
            align-items: baseline;             

            border-radius: 20px;     
        }

        i[data-working-steps-icon="mobile"] {
            color: map-get(v.$colors, dark-gray) ;
            height: 20px;
            width: 13px;
            margin: 0 f.pxToRem(27) 0 f.pxToRem(33); 
        }

        i[data-working-steps-icon="list"] {
            color: map-get(v.$colors, dark-gray) ;
            height: 16px;
            width: 16px;
            margin: 0 f.pxToRem(27) 0 f.pxToRem(33); 
        }

        i[data-working-steps-icon="store"] {
            color: map-get(v.$colors, soft-violet) ;
            height: 18px;
            width: 18px;
            margin: 0 f.pxToRem(27) 0 f.pxToRem(33); 
        }        
    }   
}

.restaurants h2,
.working h2 {
    font-size: map-get(v.$font-sizes, fs-800);
    font-weight: map-get(v.$font-weights, bold);
    margin-bottom: f.pxToRem(25);
}

/* Restaurants Section */
.restaurants { 
    display: flex;
    justify-content: center;

    background-color: v.$restaurants-background-color;    

    & > a {
        width: 100%;
    }

    &__grid {
        display: grid;
        grid-template-columns: 1fr;
        grid-auto-rows: auto;
        gap: 18px;

        @include m.media-breakpoint-up(tablet) {
            grid-template-columns: repeat(2, 1fr);
            row-gap: 25px;
            column-gap: 50px;
        }

        @include m.media-breakpoint-up(desktop) {            
            row-gap: 50px;
            column-gap: 100px;
        }
    }

    .card__header {
        height: 174px;
        width: 100%;
        position: relative;

        img {
            height: 100%;
            width: 100%;
            object-fit: cover;
        }

        .label-new {
            position: absolute;
            top: 0;
            right: 0;
            margin: 12px 12px 0 0 ;
        }
    }

    .card__content {

        h3 {
            font-size: map-get(v.$font-sizes, fs-500);
            font-weight: map-get(v.$font-weights, bold);
        }

        p {
            font-size: map-get(v.$font-sizes, fs-400);
            font-weight: map-get(v.$font-weights, light);
        }
    }    

}